{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/components/GetLocation.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { cityState } from \"../recoil/atom/cityAtom\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetLocation = () => {\n  _s();\n\n  const [city, setCity] = useRecoilState(cityState);\n  const POSITIONSTACK_API_URL = \"http://api.positionstack.com\";\n  const POSITIONSTACK_VERSION = \"v1\";\n  const POSITIONSTACK_KEY = \"61d20e9d297b7c98bad348ac29cdff2d\";\n  const POSITIONSTACK_ENDPOINT = `${POSITIONSTACK_API_URL}/${POSITIONSTACK_VERSION}/reverse?access_key=${POSITIONSTACK_KEY}`;\n\n  function main() {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    };\n\n    function getPositionCallOnSuccess(pos) {\n      const crd = pos.coords;\n      console.log(\"Your current position is:\");\n      console.log(`Latitude : ${crd.latitude}`);\n      console.log(`Longitude: ${crd.longitude}`);\n      console.log(`Now using positionstack api to get city`);\n      fetch(`${POSITIONSTACK_ENDPOINT}&query=${crd.latitude},${crd.longitude}&output=json`).then(response => {\n        response.json().then(_ref => {\n          let {\n            data\n          } = _ref;\n          // if (!data || data.length === 0)\n          // //   console.warn(\"ERROR no data found for given coordinates\");\n          // console.log(read_cookie(\"City\"));\n          let name = data[0].region.split(\" \");\n          let n = name[0];\n          let cityfromLocation = n;\n          setCity(cityfromLocation);\n        });\n      }).catch(error => {\n        console.warn(\"ERROR \", error.message);\n      });\n    }\n\n    function getPositionCallOnError(err) {\n      console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    navigator.geolocation.getCurrentPosition(getPositionCallOnSuccess, getPositionCallOnError, options);\n  }\n\n  useEffect(() => {\n    main();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GetLocation, \"5U3TkSrgsMIahB9+nXTMsM4EZC4=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = GetLocation;\nexport default GetLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLocation\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/components/GetLocation.js"],"names":["useEffect","useRecoilState","cityState","React","GetLocation","city","setCity","POSITIONSTACK_API_URL","POSITIONSTACK_VERSION","POSITIONSTACK_KEY","POSITIONSTACK_ENDPOINT","main","options","enableHighAccuracy","timeout","maximumAge","getPositionCallOnSuccess","pos","crd","coords","console","log","latitude","longitude","fetch","then","response","json","data","name","region","split","n","cityfromLocation","catch","error","warn","message","getPositionCallOnError","err","code","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,cAAc,CAACC,SAAD,CAAtC;AAEA,QAAMK,qBAAqB,GAAG,8BAA9B;AACA,QAAMC,qBAAqB,GAAG,IAA9B;AACA,QAAMC,iBAAiB,GAAG,kCAA1B;AACA,QAAMC,sBAAsB,GAAI,GAAEH,qBAAsB,IAAGC,qBAAsB,uBAAsBC,iBAAkB,EAAzH;;AAEA,WAASE,IAAT,GAAgB;AACd,UAAMC,OAAO,GAAG;AACdC,MAAAA,kBAAkB,EAAE,IADN;AAEdC,MAAAA,OAAO,EAAE,IAFK;AAGdC,MAAAA,UAAU,EAAE;AAHE,KAAhB;;AAMA,aAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACrC,YAAMC,GAAG,GAAGD,GAAG,CAACE,MAAhB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACI,QAAS,EAAvC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACK,SAAU,EAAxC;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAa,yCAAb;AAEAG,MAAAA,KAAK,CACF,GAAEd,sBAAuB,UAASQ,GAAG,CAACI,QAAS,IAAGJ,GAAG,CAACK,SAAU,cAD9D,CAAL,CAGGE,IAHH,CAGSC,QAAD,IAAc;AAClBA,QAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,QAAc;AAAA,cAAb;AAAEG,YAAAA;AAAF,WAAa;AACjC;AACA;AACA;AAEA,cAAIC,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,MAAR,CAAeC,KAAf,CAAqB,GAArB,CAAX;AACA,cAAIC,CAAC,GAAGH,IAAI,CAAC,CAAD,CAAZ;AACA,cAAII,gBAAgB,GAAGD,CAAvB;AACA1B,UAAAA,OAAO,CAAC2B,gBAAD,CAAP;AACD,SATD;AAUD,OAdH,EAeGC,KAfH,CAeUC,KAAD,IAAW;AAChBf,QAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb,EAAuBD,KAAK,CAACE,OAA7B;AACD,OAjBH;AAkBD;;AAED,aAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AACnCnB,MAAAA,OAAO,CAACgB,IAAR,CAAc,SAAQG,GAAG,CAACC,IAAK,MAAKD,GAAG,CAACF,OAAQ,EAAhD;AACD;;AAEDI,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE3B,wBADF,EAEEsB,sBAFF,EAGE1B,OAHF;AAKD;;AACDZ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1DD;;GAAMP,W;UACoBH,c;;;KADpBG,W;AA4DN,eAAeA,WAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { cityState } from \"../recoil/atom/cityAtom\";\r\nimport React from \"react\";\r\n\r\nconst GetLocation = () => {\r\n  const [city, setCity] = useRecoilState(cityState);\r\n\r\n  const POSITIONSTACK_API_URL = \"http://api.positionstack.com\";\r\n  const POSITIONSTACK_VERSION = \"v1\";\r\n  const POSITIONSTACK_KEY = \"61d20e9d297b7c98bad348ac29cdff2d\";\r\n  const POSITIONSTACK_ENDPOINT = `${POSITIONSTACK_API_URL}/${POSITIONSTACK_VERSION}/reverse?access_key=${POSITIONSTACK_KEY}`;\r\n\r\n  function main() {\r\n    const options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0,\r\n    };\r\n\r\n    function getPositionCallOnSuccess(pos) {\r\n      const crd = pos.coords;\r\n\r\n      console.log(\"Your current position is:\");\r\n      console.log(`Latitude : ${crd.latitude}`);\r\n      console.log(`Longitude: ${crd.longitude}`);\r\n\r\n      console.log(`Now using positionstack api to get city`);\r\n\r\n      fetch(\r\n        `${POSITIONSTACK_ENDPOINT}&query=${crd.latitude},${crd.longitude}&output=json`\r\n      )\r\n        .then((response) => {\r\n          response.json().then(({ data }) => {\r\n            // if (!data || data.length === 0)\r\n            // //   console.warn(\"ERROR no data found for given coordinates\");\r\n            // console.log(read_cookie(\"City\"));\r\n\r\n            let name = data[0].region.split(\" \");\r\n            let n = name[0];\r\n            let cityfromLocation = n;\r\n            setCity(cityfromLocation);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.warn(\"ERROR \", error.message);\r\n        });\r\n    }\r\n\r\n    function getPositionCallOnError(err) {\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      getPositionCallOnSuccess,\r\n      getPositionCallOnError,\r\n      options\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    main();\r\n  }, []);\r\n  return <div></div>;\r\n};\r\n\r\nexport default GetLocation;\r\n"]},"metadata":{},"sourceType":"module"}