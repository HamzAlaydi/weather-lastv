{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\n  let x = (props.data.main.temp - 273.15) * 10;\n  x = Math.round(x);\n  let temp = props.data.main.temp - 273.15;\n  temp = Math.round(temp);\n  x = x / 10;\n  let y = (props.data.main.feels_like - 273.15) * 10;\n  y = Math.round(y);\n  y = y / 10;\n  let date = new Date(props.data.dt_txt);\n  let readableDate = date.toDateString();\n  let month = date.getMonth() + 1;\n  let day = date.getDate() + \"-\" + month;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        textDecoration: \"none\"\n      },\n      to: `/Day/${day}`,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"my-3 p-3 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n          children: readableDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", props.data.weather[0].main, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [temp, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: props.data.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Temperature: \", x, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Feels like : \", y, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"JfuGBImD3+5zn/GhVS4Q1fQJNJc=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useRecoilState","fiveDaysState","Card","ListGroup","ListGroupItem","Row","Container","Col","Link","DisplayData","props","fiveDays","setFiveDays","link","data","weather","icon","x","main","temp","Math","round","y","feels_like","date","Date","dt_txt","readableDate","toDateString","month","getMonth","day","getDate","textDecoration","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n\r\n  const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\r\n\r\n  let x = (props.data.main.temp - 273.15) * 10;\r\n  x = Math.round(x);\r\n  let temp = props.data.main.temp - 273.15;\r\n  temp = Math.round(temp);\r\n  x = x / 10;\r\n  let y = (props.data.main.feels_like - 273.15) * 10;\r\n  y = Math.round(y);\r\n\r\n  y = y / 10;\r\n\r\n  let date = new Date(props.data.dt_txt);\r\n  let readableDate = date.toDateString();\r\n\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate() + \"-\" + month;\r\n\r\n  return (\r\n    <div>\r\n      <Link style={{ textDecoration: \"none\" }} to={`/Day/${day}`}>\r\n        <Card className=\"my-3 p-3 rounded\">\r\n          <ListGroupItem>{readableDate}</ListGroupItem>\r\n          <Card.Img variant=\"top\" src={link} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {\" \"}\r\n              {props.data.weather[0].main} <span>{temp}°</span>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>{props.data.weather[0].description}</ListGroupItem>\r\n            <ListGroupItem>Temperature: {x}°</ListGroupItem>\r\n            <ListGroupItem>Feels like : {y}°</ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}