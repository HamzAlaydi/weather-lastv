{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\nimport FiveDays from \"./FiveDays\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  const [city, setCity] = useRecoilState(cityState);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(FetchDataFromAPI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You Choose \", city, \" City\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: fiveDays.map(data => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: [console.log(data.weather[0].id.length), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(FiveDays, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, data.dt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"x1S9aWLC252GXCcPxwClbmB1zQI=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useEffect","useState","useRecoilState","fiveDaysState","cityState","Row","Container","Col","FetchDataFromAPI","FiveDays","DisplayData","props","fiveDays","setFiveDays","city","setCity","map","data","console","log","weather","id","length","dt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,yBAAzC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,cAAc,CAACC,aAAD,CAA9C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBb,cAAc,CAACE,SAAD,CAAtC;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gCAAgBU,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,GAAD;AAAA,gBACGF,QAAQ,CAACI,GAAT,CAAcC,IAAD,IAAU;AACtB,4BACE,QAAC,GAAD;AAAA,qBACGC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,EAAhB,CAAmBC,MAA/B,CADH,eAEE,QAAC,GAAD;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUA,IAAI,CAACM,EAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtBD;;GAAMb,W;UAC4BR,c,EACRA,c;;;KAFpBQ,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\r\nimport FiveDays from \"./FiveDays\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  const [city, setCity] = useRecoilState(cityState);\r\n\r\n  return (\r\n    <Container>\r\n      <FetchDataFromAPI />\r\n      <h3>You Choose {city} City</h3>\r\n      <Row>\r\n        {fiveDays.map((data) => {\r\n          return (\r\n            <Col key={data.dt}>\r\n              {console.log(data.weather[0].id.length)}\r\n              <Row>\r\n                <FiveDays data={data} />\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}