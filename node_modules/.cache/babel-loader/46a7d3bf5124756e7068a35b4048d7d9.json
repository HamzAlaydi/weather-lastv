{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\nimport FiveDays from \"./FiveDays\";\nimport Index from \"./Index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  const [city, setCity] = useRecoilState(cityState);\n  useEffect(() => {\n    if (fiveDays.length == 0 || fiveDays.length == 2) {\n      return console.log(\"no Data\");\n    } else {\n      fiveDays.map(data => {\n        console.log(data.weather[0].icon);\n        const link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n        let x = (data.main.temp - 273.15) * 10;\n        x = Math.round(x);\n        let temp = data.main.temp - 273.15;\n        temp = Math.round(temp);\n        x = x / 10;\n        let y = (data.main.feels_like - 273.15) * 10;\n        y = Math.round(y);\n        y = y / 10;\n        let date = new Date(data.dt_txt);\n        let readableDate = date.toDateString();\n        let month = date.getMonth() + 1;\n        let day = date.getDate() + \"-\" + month;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"SDASDASDASDAS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this);\n      });\n    }\n  }, [fiveDays]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchDataFromAPI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), fiveDays.map(data => {\n      let link = \"\";\n      let main = 0;\n      let temperature = 0;\n\n      if (data.length == 2) {\n        console.log(\"data == 2\");\n      } else {\n        main = data.weather[0].main;\n        temperature = data.main.temp - 273.15;\n        temperature = Math.round(temperature);\n        link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          className: \"my-3 p-3 rounded\",\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [temperature, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    }), \"Display Data\", fiveDays.length]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"OgFvapP/1SlkHFMJFkgSUfaBGkI=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useEffect","useState","useRecoilState","fiveDaysState","cityState","Card","ListGroup","ListGroupItem","Row","Container","Col","Link","FetchDataFromAPI","FiveDays","Index","DisplayData","props","fiveDays","setFiveDays","city","setCity","length","console","log","map","data","weather","icon","link","x","main","temp","Math","round","y","feels_like","date","Date","dt_txt","readableDate","toDateString","month","getMonth","day","getDate","temperature"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\r\nimport FiveDays from \"./FiveDays\";\r\nimport Index from \"./Index\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  const [city, setCity] = useRecoilState(cityState);\r\n\r\n  useEffect(() => {\r\n    if (fiveDays.length == 0 || fiveDays.length == 2) {\r\n      return console.log(\"no Data\");\r\n    } else {\r\n      fiveDays.map((data) => {\r\n        console.log(data.weather[0].icon);\r\n        const link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\r\n\r\n        let x = (data.main.temp - 273.15) * 10;\r\n        x = Math.round(x);\r\n        let temp = data.main.temp - 273.15;\r\n        temp = Math.round(temp);\r\n        x = x / 10;\r\n        let y = (data.main.feels_like - 273.15) * 10;\r\n        y = Math.round(y);\r\n\r\n        y = y / 10;\r\n\r\n        let date = new Date(data.dt_txt);\r\n        let readableDate = date.toDateString();\r\n\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate() + \"-\" + month;\r\n        return <p>SDASDASDASDAS</p>;\r\n      });\r\n    }\r\n  }, [fiveDays]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchDataFromAPI />\r\n      {fiveDays.map((data) => {\r\n        let link = \"\";\r\n        let main = 0;\r\n        let temperature = 0;\r\n        if (data.length == 2) {\r\n          console.log(\"data == 2\");\r\n        } else {\r\n          main = data.weather[0].main;\r\n          temperature = data.main.temp - 273.15;\r\n          temperature = Math.round(temperature);\r\n\r\n          link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\r\n        }\r\n        return (\r\n          <div>\r\n            {\" \"}\r\n            <Card className=\"my-3 p-3 rounded\">\r\n              <Card.Img variant=\"top\" src={link} />\r\n            </Card>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                {\" \"}\r\n                <span>{temperature}°</span>\r\n              </Card.Title>\r\n              <Card.Title></Card.Title>\r\n              <Card.Title></Card.Title>\r\n            </Card.Body>\r\n          </div>\r\n        );\r\n      })}\r\n      Display Data\r\n      {fiveDays.length}\r\n    </div>\r\n  );\r\n};\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}