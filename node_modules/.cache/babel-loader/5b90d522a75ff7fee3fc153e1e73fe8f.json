{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/components/FetchDataFromAPI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport { cityState, fiveDaysState, weatherState } from \"../recoil/atom/cityAtom\";\nimport { Col, Row, Container } from \"react-bootstrap\";\nimport GetLocation from \"./GetLocation\";\nimport Index from \"../screens/Index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = \"478f1611be4e3a210abc53f2b1c9e8d4\";\n\nconst FetchDataFromAPI = () => {\n  _s();\n\n  const [weather, setWeather] = useRecoilState(weatherState);\n  const [city, setCity] = useRecoilState(cityState);\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState); // const [ss, setSS] = useState();\n\n  const link = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${key}`; ////////////////////Fetch Data\n\n  const sendReq = async () => {\n    const weatherData = await axios.get(link);\n    setWeather(weatherData);\n  };\n\n  const fetchData = () => {\n    if (typeof city == \"undefined\" || city == \"\") {\n      console.log(\"no city selected\");\n    } else {\n      sendReq();\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    let tempArr = [];\n\n    if (weather == \"recoil\" || typeof weather == undefined) {// console.log(\"City Nane  not loaded yet \");\n    } else {\n      let iterator = weather.data.list;\n\n      for (let i = 0; i < iterator.length; i += 8) {\n        tempArr.push(iterator[i]);\n      }\n\n      setFiveDays(tempArr);\n      console.log(tempArr);\n    }\n  }, [city]);\n\n  const txt = _ => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: \"40px\"\n      },\n      children: [\"The Weather in \", city, \" City For 5 Days\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(GetLocation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), txt(), /*#__PURE__*/_jsxDEV(Row, {\n      children: [\"dasdsa\", /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchDataFromAPI, \"qiEtxVEeWi8U+2k9bDPrdLsi1LY=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = FetchDataFromAPI;\nexport default FetchDataFromAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchDataFromAPI\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/components/FetchDataFromAPI.js"],"names":["React","useState","useEffect","axios","useRecoilState","cityState","fiveDaysState","weatherState","Col","Row","Container","GetLocation","Index","key","FetchDataFromAPI","weather","setWeather","city","setCity","fiveDays","setFiveDays","link","sendReq","weatherData","get","fetchData","console","log","tempArr","undefined","iterator","data","list","i","length","push","txt","_","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,YAHF,QAIO,yBAJP;AAKA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,GAAG,GAAG,kCAAZ;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,cAAc,CAACG,YAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,cAAc,CAACC,SAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BhB,cAAc,CAACE,aAAD,CAA9C,CAH6B,CAI7B;;AACA,QAAMe,IAAI,GAAI,sDAAqDJ,IAAK,UAASJ,GAAI,EAArF,CAL6B,CAO7B;;AAEA,QAAMS,OAAO,GAAG,YAAY;AAC1B,UAAMC,WAAW,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAUH,IAAV,CAA1B;AACAL,IAAAA,UAAU,CAACO,WAAD,CAAV;AACD,GAHD;;AAKA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAI,OAAOR,IAAP,IAAe,WAAf,IAA8BA,IAAI,IAAI,EAA1C,EAA8C;AAC5CS,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD,MAEO;AACLL,MAAAA,OAAO;AACR;AACF,GAND;;AAQApB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,SAAS;AAET,QAAIG,OAAO,GAAG,EAAd;;AACA,QAAIb,OAAO,IAAI,QAAX,IAAuB,OAAOA,OAAP,IAAkBc,SAA7C,EAAwD,CACtD;AACD,KAFD,MAEO;AACL,UAAIC,QAAQ,GAAGf,OAAO,CAACgB,IAAR,CAAaC,IAA5B;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;AAC3CL,QAAAA,OAAO,CAACO,IAAR,CAAaL,QAAQ,CAACG,CAAD,CAArB;AACD;;AACDb,MAAAA,WAAW,CAACQ,OAAD,CAAX;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD;AACF,GAfQ,EAeN,CAACX,IAAD,CAfM,CAAT;;AAiBA,QAAMmB,GAAG,GAAIC,CAAD,IAAO;AACjB,wBACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA,oCACkBrB,IADlB,sBACwC,GADxC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGmB,GAAG,EAFN,eAGE,QAAC,GAAD;AAAA,wCAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9DD;;GAAMtB,gB;UAC0BV,c,EACNA,c,EACQA,c;;;KAH5BU,gB;AAgEN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport {\r\n  cityState,\r\n  fiveDaysState,\r\n  weatherState,\r\n} from \"../recoil/atom/cityAtom\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport GetLocation from \"./GetLocation\";\r\nimport Index from \"../screens/Index\";\r\n\r\nconst key = \"478f1611be4e3a210abc53f2b1c9e8d4\";\r\nconst FetchDataFromAPI = () => {\r\n  const [weather, setWeather] = useRecoilState(weatherState);\r\n  const [city, setCity] = useRecoilState(cityState);\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  // const [ss, setSS] = useState();\r\n  const link = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${key}`;\r\n\r\n  ////////////////////Fetch Data\r\n\r\n  const sendReq = async () => {\r\n    const weatherData = await axios.get(link);\r\n    setWeather(weatherData);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    if (typeof city == \"undefined\" || city == \"\") {\r\n      console.log(\"no city selected\");\r\n    } else {\r\n      sendReq();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    let tempArr = [];\r\n    if (weather == \"recoil\" || typeof weather == undefined) {\r\n      // console.log(\"City Nane  not loaded yet \");\r\n    } else {\r\n      let iterator = weather.data.list;\r\n\r\n      for (let i = 0; i < iterator.length; i += 8) {\r\n        tempArr.push(iterator[i]);\r\n      }\r\n      setFiveDays(tempArr);\r\n      console.log(tempArr);\r\n    }\r\n  }, [city]);\r\n\r\n  const txt = (_) => {\r\n    return (\r\n      <h2 style={{ marginTop: \"40px\" }}>\r\n        The Weather in {city} City For 5 Days{\" \"}\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <GetLocation />\r\n      {txt()}\r\n      <Row>\r\n        {/* {fiveDays.map((data) => (\r\n          <Col key={data.dt_txt}>\r\n            <DisplayData data={data} />\r\n          </Col>\r\n        ))} */}\r\n        dasdsa\r\n        <Index />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FetchDataFromAPI;\r\n"]},"metadata":{},"sourceType":"module"}