{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/components/SearchData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { lOneDayState, sOneDayState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem, Button, Col, Row } from \"react-bootstrap\"; // if (props.data.weather.length > 0 && props.data.weather !== \"undefined\") {\n//   return (\n//     <div>\n//       <p>SearchData</p>\n//     </div>\n//   );\n// } else {\n//   return <p>Waiting Data</p>;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchData = props => {\n  _s();\n\n  const [lOneDay, setLOneDay] = useRecoilState(lOneDayState);\n  const [sOneDay, setSOneDay] = useRecoilState(sOneDayState);\n\n  if (lOneDay.dt) {\n    const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"not Loaded yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(SearchData, \"fSEgwDnDD00TrWUu1sTQFjI8e0w=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = SearchData;\nexport default SearchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/components/SearchData.js"],"names":["React","useRecoilState","lOneDayState","sOneDayState","Card","ListGroup","ListGroupItem","Button","Col","Row","SearchData","props","lOneDay","setLOneDay","sOneDay","setSOneDay","dt","link","data","weather","icon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,yBAA3C;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,MAJF,EAKEC,GALF,EAMEC,GANF,QAOO,iBAPP,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,cAAc,CAACC,YAAD,CAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBd,cAAc,CAACE,YAAD,CAA5C;;AACA,MAAIS,OAAO,CAACI,EAAZ,EAAgB;AACd,UAAMC,IAAI,GAAI,oCAAmCN,KAAK,CAACO,IAAN,CAAWC,OAAX,CAAmB,CAAnB,EAAsBC,IAAK,SAA5E;AAEA,wBAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJD,MAIO;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CAVD;;GAAMV,U;UAC0BT,c,EACAA,c;;;KAF1BS,U;AAYN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { lOneDayState, sOneDayState } from \"../recoil/atom/cityAtom\";\nimport {\n  Card,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Col,\n  Row,\n} from \"react-bootstrap\";\n\n// if (props.data.weather.length > 0 && props.data.weather !== \"undefined\") {\n//   return (\n//     <div>\n//       <p>SearchData</p>\n//     </div>\n//   );\n// } else {\n//   return <p>Waiting Data</p>;\n// }\nconst SearchData = (props) => {\n  const [lOneDay, setLOneDay] = useRecoilState(lOneDayState);\n  const [sOneDay, setSOneDay] = useRecoilState(sOneDayState);\n  if (lOneDay.dt) {\n    const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\n\n    return <Col> </Col>;\n  } else {\n    return <p>not Loaded yet</p>;\n  }\n};\n\nexport default SearchData;\n"]},"metadata":{},"sourceType":"module"}