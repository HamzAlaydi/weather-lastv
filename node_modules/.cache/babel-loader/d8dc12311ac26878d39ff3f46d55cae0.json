{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\nimport FiveDays from \"./FiveDays\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  const [city, setCity] = useRecoilState(cityState);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"You Choose \", city, \" City\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(FetchDataFromAPI, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), fiveDays.map(data => {\n        let obj = [];\n        let link = \"\";\n        let main = 0;\n        let temperature = 0;\n        let date;\n        let readableDate;\n        let feelLike;\n\n        if (data.length == 2) {\n          console.log(\"data == 2\");\n        } else {\n          obj = data.weather[0];\n          main = obj.main;\n          temperature = data.main.temp - 273.15;\n          temperature = Math.round(temperature);\n          feelLike = data.main.feels_like - 273.15;\n          feelLike = Math.round(feelLike);\n          link = `http://openweathermap.org/img/wn/${obj.icon}@2x.png`;\n          data = new Date(data.dt_txt);\n          readableDate = data.toDateString();\n        }\n\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(FiveDays, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"x1S9aWLC252GXCcPxwClbmB1zQI=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useEffect","useState","useRecoilState","fiveDaysState","cityState","Card","ListGroup","ListGroupItem","Row","Container","Col","Link","FetchDataFromAPI","FiveDays","DisplayData","props","fiveDays","setFiveDays","city","setCity","map","data","obj","link","main","temperature","date","readableDate","feelLike","length","console","log","weather","temp","Math","round","feels_like","icon","Date","dt_txt","toDateString","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,yBAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,aAA1B,QAA+C,iBAA/C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,cAAc,CAACC,aAAD,CAA9C;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBjB,cAAc,CAACE,SAAD,CAAtC;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA,gCAAgBc,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,QAAQ,CAACI,GAAT,CAAcC,IAAD,IAAU;AACtB,YAAIC,GAAG,GAAG,EAAV;AACA,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIC,IAAI,GAAG,CAAX;AACA,YAAIC,WAAW,GAAG,CAAlB;AACA,YAAIC,IAAJ;AACA,YAAIC,YAAJ;AACA,YAAIC,QAAJ;;AACA,YAAIP,IAAI,CAACQ,MAAL,IAAe,CAAnB,EAAsB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,SAFD,MAEO;AACLT,UAAAA,GAAG,GAAGD,IAAI,CAACW,OAAL,CAAa,CAAb,CAAN;AACAR,UAAAA,IAAI,GAAGF,GAAG,CAACE,IAAX;AACAC,UAAAA,WAAW,GAAGJ,IAAI,CAACG,IAAL,CAAUS,IAAV,GAAiB,MAA/B;AACAR,UAAAA,WAAW,GAAGS,IAAI,CAACC,KAAL,CAAWV,WAAX,CAAd;AACAG,UAAAA,QAAQ,GAAGP,IAAI,CAACG,IAAL,CAAUY,UAAV,GAAuB,MAAlC;AACAR,UAAAA,QAAQ,GAAGM,IAAI,CAACC,KAAL,CAAWP,QAAX,CAAX;AACAL,UAAAA,IAAI,GAAI,oCAAmCD,GAAG,CAACe,IAAK,SAApD;AACAhB,UAAAA,IAAI,GAAG,IAAIiB,IAAJ,CAASjB,IAAI,CAACkB,MAAd,CAAP;AACAZ,UAAAA,YAAY,GAAGN,IAAI,CAACmB,YAAL,EAAf;AACD;;AACD,4BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEnB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUa,IAAI,CAACO,MAAL,EAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA5BA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAzCD;;GAAM3B,W;UAC4BZ,c,EACRA,c;;;KAFpBY,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\r\nimport FiveDays from \"./FiveDays\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  const [city, setCity] = useRecoilState(cityState);\r\n\r\n  return (\r\n    <Container>\r\n      <h3>You Choose {city} City</h3>\r\n      <Row>\r\n        <FetchDataFromAPI />\r\n        {fiveDays.map((data) => {\r\n          let obj = [];\r\n          let link = \"\";\r\n          let main = 0;\r\n          let temperature = 0;\r\n          let date;\r\n          let readableDate;\r\n          let feelLike;\r\n          if (data.length == 2) {\r\n            console.log(\"data == 2\");\r\n          } else {\r\n            obj = data.weather[0];\r\n            main = obj.main;\r\n            temperature = data.main.temp - 273.15;\r\n            temperature = Math.round(temperature);\r\n            feelLike = data.main.feels_like - 273.15;\r\n            feelLike = Math.round(feelLike);\r\n            link = `http://openweathermap.org/img/wn/${obj.icon}@2x.png`;\r\n            data = new Date(data.dt_txt);\r\n            readableDate = data.toDateString();\r\n          }\r\n          return (\r\n            <Col key={Math.random()}>\r\n              <Row>\r\n                <FiveDays data={data} />\r\n              </Row>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}