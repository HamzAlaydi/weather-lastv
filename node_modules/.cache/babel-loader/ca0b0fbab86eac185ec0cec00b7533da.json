{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/FiveDays.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\nimport { useRecoilState } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FiveDays = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n\n  if (fiveDays.length > 0) {\n    const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\n    let date = new Date(props.data.dt_txt);\n    let readableDate = date.toDateString();\n    let temperature = props.data.main.temp - 273.15;\n    temperature = Math.round(temperature);\n    let feels_like = (props.data.main.feels_like - 273.15) * 10;\n    feels_like = Math.round(feels_like);\n    feels_like = feels_like / 10;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/Day/${readableDate.getDate()}`,\n      style: {\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"my-3 p-3 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", props.data.weather[0].main, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", temperature, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          className: \"list-group-flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: props.data.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: readableDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Temperature: \", temperature, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: [\"Feels like : \", feels_like, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Data not loaded yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(FiveDays, \"JfuGBImD3+5zn/GhVS4Q1fQJNJc=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = FiveDays;\nexport default FiveDays;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiveDays\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/FiveDays.js"],"names":["React","Card","ListGroup","ListGroupItem","Link","fiveDaysState","useRecoilState","FiveDays","props","fiveDays","setFiveDays","length","link","data","weather","icon","date","Date","dt_txt","readableDate","toDateString","temperature","main","temp","Math","round","feels_like","getDate","textDecoration","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\nimport { useRecoilState } from \"recoil\";\nconst FiveDays = (props) => {\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  if (fiveDays.length > 0) {\n    const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\n    let date = new Date(props.data.dt_txt);\n    let readableDate = date.toDateString();\n\n    let temperature = props.data.main.temp - 273.15;\n    temperature = Math.round(temperature);\n\n    let feels_like = (props.data.main.feels_like - 273.15) * 10;\n    feels_like = Math.round(feels_like);\n    feels_like = feels_like / 10;\n\n    return (\n      <Link\n        to={`/Day/${readableDate.getDate()}`}\n        style={{ textDecoration: \"none\" }}\n      >\n        <Card className=\"my-3 p-3 rounded\">\n          <Card.Img variant=\"top\" src={link} />\n          <Card.Body>\n            <Card.Title>\n              {\" \"}\n              {props.data.weather[0].main} <span> {temperature}°</span>\n            </Card.Title>\n            <Card.Title></Card.Title>\n            <Card.Title></Card.Title>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>{props.data.weather[0].description}</ListGroupItem>\n            <ListGroupItem>{readableDate}</ListGroupItem>\n            <ListGroupItem>Temperature: {temperature}°</ListGroupItem>\n            <ListGroupItem>Feels like : {feels_like}°</ListGroupItem>\n          </ListGroup>\n        </Card>\n      </Link>\n    );\n  } else {\n    return <p>Data not loaded yet</p>;\n  }\n};\n\nexport default FiveDays;\n"]},"metadata":{},"sourceType":"module"}