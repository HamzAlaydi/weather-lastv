{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  useEffect(() => {\n    fiveDays.map(f => {\n      return console.log(f.dt());\n    });\n  }, [fiveDays]);\n  const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`; // // let x = (props.data.main.temp - 273.15) * 10;\n  // // x = Math.round(x);\n  // // let temp = props.data.main.temp - 273.15;\n  // // temp = Math.round(temp);\n  // // x = x / 10;\n  // // let y = (props.data.main.feels_like - 273.15) * 10;\n  // // y = Math.round(y);\n  // // y = y / 10;\n  // // let date = new Date(props.data.dt_txt);\n  // // let readableDate = date.toDateString();\n  // // let month = date.getMonth() + 1;\n  // // let day = date.getDate() + \"-\" + month;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchDataFromAPI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \"fiveDays\", console.log(fiveDays), console.log(\"fiveDays\")]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"of4bUB8V3qd9AMoz56WqTPt8uFc=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useRecoilState","fiveDaysState","Card","ListGroup","ListGroupItem","Row","Container","Col","Link","FetchDataFromAPI","DisplayData","props","fiveDays","setFiveDays","useEffect","map","f","console","log","dt","link","data","weather","icon"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,aAA1B,QAA+C,iBAA/C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,cAAc,CAACC,aAAD,CAA9C;AACAa,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,QAAQ,CAACG,GAAT,CAAcC,CAAD,IAAO;AAClB,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,EAAF,EAAZ,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,CAACP,QAAD,CAJM,CAAT;AAKA,QAAMQ,IAAI,GAAI,oCAAmCT,KAAK,CAACU,IAAN,CAAWC,OAAX,CAAmB,CAAnB,EAAsBC,IAAK,SAA5E,CAP6B,CAS7B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,cAGGN,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAHH,EAIGK,OAAO,CAACC,GAAR,CAAY,UAAZ,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlDD;;GAAMR,W;UAC4BV,c;;;KAD5BU,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState } from \"../recoil/atom/cityAtom\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  useEffect(() => {\r\n    fiveDays.map((f) => {\r\n      return console.log(f.dt());\r\n    });\r\n  }, [fiveDays]);\r\n  const link = `http://openweathermap.org/img/wn/${props.data.weather[0].icon}@2x.png`;\r\n\r\n  // // let x = (props.data.main.temp - 273.15) * 10;\r\n  // // x = Math.round(x);\r\n  // // let temp = props.data.main.temp - 273.15;\r\n  // // temp = Math.round(temp);\r\n  // // x = x / 10;\r\n  // // let y = (props.data.main.feels_like - 273.15) * 10;\r\n  // // y = Math.round(y);\r\n\r\n  // // y = y / 10;\r\n\r\n  // // let date = new Date(props.data.dt_txt);\r\n  // // let readableDate = date.toDateString();\r\n\r\n  // // let month = date.getMonth() + 1;\r\n  // // let day = date.getDate() + \"-\" + month;\r\n\r\n  return (\r\n    <div>\r\n      <FetchDataFromAPI />\r\n      fiveDays\r\n      {console.log(fiveDays)}\r\n      {console.log(\"fiveDays\")}\r\n      {/* <Link style={{ textDecoration: \"none\" }} to={`/Day/${day}`}>\r\n        <Card className=\"my-3 p-3 rounded\">\r\n          <ListGroupItem>{readableDate}</ListGroupItem>\r\n          <Card.Img variant=\"top\" src={link} />\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {\" \"}\r\n              {props.data.weather[0].main} <span>{temp}°</span>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>{props.data.weather[0].description}</ListGroupItem>\r\n            <ListGroupItem>Temperature: {x}°</ListGroupItem>\r\n            <ListGroupItem>Feels like : {y}°</ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Link> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}