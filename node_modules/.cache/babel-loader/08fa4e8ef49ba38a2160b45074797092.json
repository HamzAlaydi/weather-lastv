{"ast":null,"code":"var _jsxFileName = \"/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayData = props => {\n  _s();\n\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\n  const [city, setCity] = useRecoilState(cityState);\n  const [icon, setIcon] = useState(\"\");\n  useEffect(() => {\n    if (fiveDays.length == 0 || fiveDays.length == 2) {\n      return console.log(\"no Data\");\n    } else {\n      fiveDays.map(data => {\n        console.log(data.weather[0].icon);\n        const link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\n        setIcon(link);\n        let x = (data.main.temp - 273.15) * 10;\n        x = Math.round(x);\n        let temp = data.main.temp - 273.15;\n        temp = Math.round(temp);\n        x = x / 10;\n        let y = (data.main.feels_like - 273.15) * 10;\n        y = Math.round(y);\n        y = y / 10;\n        let date = new Date(data.dt_txt);\n        let readableDate = date.toDateString();\n        let month = date.getMonth() + 1;\n        let day = date.getDate() + \"-\" + month;\n      });\n    }\n  }, [fiveDays]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FetchDataFromAPI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"fiveDays\", console.log(fiveDays), console.log(\"fiveDays\"), /*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DisplayData, \"q8GCiCC7isQL0RHKA03xh+rHmw8=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/home/hamza-alaydi/React/weather-app/src/screens/DisplayData.js"],"names":["React","useEffect","useState","useRecoilState","fiveDaysState","cityState","Card","ListGroup","ListGroupItem","Row","Container","Col","Link","FetchDataFromAPI","DisplayData","props","fiveDays","setFiveDays","city","setCity","icon","setIcon","length","console","log","map","data","weather","link","x","main","temp","Math","round","y","feels_like","date","Date","dt_txt","readableDate","toDateString","month","getMonth","day","getDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,yBAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,aAA1B,QAA+C,iBAA/C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,cAAc,CAACC,aAAD,CAA9C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBhB,cAAc,CAACE,SAAD,CAAtC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,QAAQ,CAACM,MAAT,IAAmB,CAAnB,IAAwBN,QAAQ,CAACM,MAAT,IAAmB,CAA/C,EAAkD;AAChD,aAAOC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAP;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAAU;AACrBH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBP,IAA5B;AACA,cAAMQ,IAAI,GAAI,oCAAmCF,IAAI,CAACC,OAAL,CAAa,CAAb,EAAgBP,IAAK,SAAtE;AACAC,QAAAA,OAAO,CAACO,IAAD,CAAP;AACA,YAAIC,CAAC,GAAG,CAACH,IAAI,CAACI,IAAL,CAAUC,IAAV,GAAiB,MAAlB,IAA4B,EAApC;AACAF,QAAAA,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAWJ,CAAX,CAAJ;AACA,YAAIE,IAAI,GAAGL,IAAI,CAACI,IAAL,CAAUC,IAAV,GAAiB,MAA5B;AACAA,QAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACAF,QAAAA,CAAC,GAAGA,CAAC,GAAG,EAAR;AACA,YAAIK,CAAC,GAAG,CAACR,IAAI,CAACI,IAAL,CAAUK,UAAV,GAAuB,MAAxB,IAAkC,EAA1C;AACAD,QAAAA,CAAC,GAAGF,IAAI,CAACC,KAAL,CAAWC,CAAX,CAAJ;AAEAA,QAAAA,CAAC,GAAGA,CAAC,GAAG,EAAR;AAEA,YAAIE,IAAI,GAAG,IAAIC,IAAJ,CAASX,IAAI,CAACY,MAAd,CAAX;AACA,YAAIC,YAAY,GAAGH,IAAI,CAACI,YAAL,EAAnB;AAEA,YAAIC,KAAK,GAAGL,IAAI,CAACM,QAAL,KAAkB,CAA9B;AACA,YAAIC,GAAG,GAAGP,IAAI,CAACQ,OAAL,KAAiB,GAAjB,GAAuBH,KAAjC;AACD,OAnBD;AAoBD;AACF,GAzBQ,EAyBN,CAACzB,QAAD,CAzBM,CAAT;AA2BA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADF,cAGGO,OAAO,CAACC,GAAR,CAAYR,QAAZ,CAHH,EAIGO,OAAO,CAACC,GAAR,CAAY,UAAZ,CAJH,eAKE,QAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAC,KAAlB;AAAwB,MAAA,GAAG,EAAEJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxDD;;GAAMN,W;UAC4BX,c,EACRA,c;;;KAFpBW,W;AA0DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { fiveDaysState, cityState } from \"../recoil/atom/cityAtom\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Row, Container, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FetchDataFromAPI from \"../components/FetchDataFromAPI\";\r\nconst DisplayData = (props) => {\r\n  const [fiveDays, setFiveDays] = useRecoilState(fiveDaysState);\r\n  const [city, setCity] = useRecoilState(cityState);\r\n  const [icon, setIcon] = useState(\"\");\r\n  useEffect(() => {\r\n    if (fiveDays.length == 0 || fiveDays.length == 2) {\r\n      return console.log(\"no Data\");\r\n    } else {\r\n      fiveDays.map((data) => {\r\n        console.log(data.weather[0].icon);\r\n        const link = `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`;\r\n        setIcon(link);\r\n        let x = (data.main.temp - 273.15) * 10;\r\n        x = Math.round(x);\r\n        let temp = data.main.temp - 273.15;\r\n        temp = Math.round(temp);\r\n        x = x / 10;\r\n        let y = (data.main.feels_like - 273.15) * 10;\r\n        y = Math.round(y);\r\n\r\n        y = y / 10;\r\n\r\n        let date = new Date(data.dt_txt);\r\n        let readableDate = date.toDateString();\r\n\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate() + \"-\" + month;\r\n      });\r\n    }\r\n  }, [fiveDays]);\r\n\r\n  return (\r\n    <div>\r\n      <FetchDataFromAPI />\r\n      fiveDays\r\n      {console.log(fiveDays)}\r\n      {console.log(\"fiveDays\")}\r\n      <Card.Img variant=\"top\" src={icon} />\r\n      {/* <Link style={{ textDecoration: \"none\" }} to={`/Day/${day}`}>\r\n        <Card className=\"my-3 p-3 rounded\">\r\n          <ListGroupItem>{readableDate}</ListGroupItem>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {\" \"}\r\n              {data.weather[0].main} <span>{temp}°</span>\r\n            </Card.Title>\r\n          </Card.Body>\r\n          <ListGroup className=\"list-group-flush\">\r\n            <ListGroupItem>{data.weather[0].description}</ListGroupItem>\r\n            <ListGroupItem>Temperature: {x}°</ListGroupItem>\r\n            <ListGroupItem>Feels like : {y}°</ListGroupItem>\r\n          </ListGroup>\r\n        </Card>\r\n      </Link> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayData;\r\n"]},"metadata":{},"sourceType":"module"}